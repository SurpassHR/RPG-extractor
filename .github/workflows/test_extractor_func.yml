name: Test extractor function
on:
  # 触发方式: 手动触发和推送 mater 分支时触发
  workflow_dispatch:
  push:
    branches: [master]

env:
  # slice repo name from repo full path
  REPO_NAME: "$(echo ${{ github.repository }} | cut -d'/' -f2)"
  REPO_FOLDER: "${REPO_NAME}/${REPO_NAME}"
  DOWNLOAD_FOLDER: "gdrive_data"
  OUTPUT_FOLDER: "extract_data"

jobs:
  download_from_gdrive:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install gdrive tool
      working-directory: ./
      run: |
        curl -L -o gdrive.tar.gz https://github.com/glotlabs/gdrive/releases/download/3.9.1/gdrive_linux-x64.tar.gz
        tar -xzf gdrive.tar.gz
        sudo install gdrive /usr/local/bin/gdrive

    - name: Setup service account credentials
      working-directory: ./
      run: |
        dirName=${{ secrets.GDRIVE_SERVICE_ACCOUNT_NAME }}
        mkdir ${dirName}
        echo "${{ secrets.GDRIVE_SERVICE_ACCOUNT_SECRET }}" | base64 --decode > ${dirName}/secret.json
        echo "${{ secrets.GDRIVE_SERVICE_ACCOUNT_TOKENS }}" | base64 --decode > ${dirName}/tokens.json
        tar -cf gdrive_export.tar ${dirName}
        rm -rf ${dirName}

    - name: Authenticate with Google Drive
      working-directory: ./
      run: |
        gdrive account import ./gdrive_export.tar

    - name: Create folders
      working-directory: ./
      run: |
        mkdir ${{ env.DOWNLOAD_FOLDER }}
        mkdir ${{ env.OUTPUT_FOLDER }}

    # - name: Download files list
    #   run: |
    #     FILE_IDS=()
    #     for FILE_ID in "${FILE_IDS[@]}"
    #     do
    #       echo "Downloading $FILE_ID ..."
    #       gdrive files download "$FILE_ID" --destination ${{ env.DOWNLOAD_FOLDER }}
    #     done

    # Download folder
    # - name: Download folder from Google Drive
    #   run: |
    #     FOLDER_ID="1df-sCx8eXkaxV1fiUoos6shYxBg0H_Do"
    #     gdrive files download --recursive --destination ${{ env.DOWNLOAD_FOLDER }} "$FOLDER_ID"

    # Download compressed data and extract
    - name: Download file from Google Drive
      id: download_and_extract
      working-directory: ./
      run: |
        FILE_INFO=(
          "14WIwqL2D0HfRA49lf_Q6VzMniS9Q14Kr:Curse of pleasure v0.9.tar.gz"
        )
        EXTRACTED_FOLDERS=()
        for item in "${FILE_INFO[@]}"
        do
          FILE_ID="${item%%:*}"
          FILENAME="${item#*:}"
          gdrive files download "${FILE_ID}" --destination ${{ env.DOWNLOAD_FOLDER }}
          echo "Extracting \"${FILENAME}\"..."
          # Extract and find the top-level directory created
          # Try to extract as a tar archive, letting tar auto-detect compression
          EXTRACTED_DIR=$(tar -tf "${{ env.DOWNLOAD_FOLDER }}/${FILENAME}" | head -1 | cut -f1 -d"/")
          tar -xf "${{ env.DOWNLOAD_FOLDER }}/${FILENAME}" -C "${{ env.DOWNLOAD_FOLDER }}"
          EXTRACTED_FOLDERS+=("${{ env.DOWNLOAD_FOLDER }}/${EXTRACTED_DIR}")
        done
        # For now, we only pass the first extracted folder.
        # If multiple folders need to be handled, the logic in the next step should be updated.
        echo "::set-output name=extracted_folder::${EXTRACTED_FOLDERS[0]}"

    - name: Run test
      working-directory: ${{ env.REPO_FOLDER }}
      run: |
        # init server environment
        bash init_dev_cli_env.sh
        # test
        python run.py --dataFolder "${{ steps.download_and_extract.outputs.extracted_folder }}" --outputFolder "${{ env.OUTPUT_FOLDER }}"